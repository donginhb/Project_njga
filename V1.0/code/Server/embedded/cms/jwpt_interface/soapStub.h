/* soapStub.h
   Generated by gSOAP 2.8.45 for PublicService.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20845
# error "GSOAP VERSION 20845 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns1__queryObjectInfoResponse;	/* PublicService.h:266 */
struct ns1__queryObjectInfo;	/* PublicService.h:266 */
struct ns1__insertObjectInfoResponse;	/* PublicService.h:339 */
struct ns1__insertObjectInfo;	/* PublicService.h:339 */
struct ns1__updateObjectInfoResponse;	/* PublicService.h:412 */
struct ns1__updateObjectInfo;	/* PublicService.h:412 */
struct ns1__deleteObjectInfoResponse;	/* PublicService.h:485 */
struct ns1__deleteObjectInfo;	/* PublicService.h:485 */
struct ns1__callDataBaseProcessResponse;	/* PublicService.h:558 */
struct ns1__callDataBaseProcess;	/* PublicService.h:558 */
struct ns1__batchObjectInfoResponse;	/* PublicService.h:628 */
struct ns1__batchObjectInfo;	/* PublicService.h:628 */
struct ns1__wsObjectInfoResponse;	/* PublicService.h:701 */
struct ns1__wsObjectInfo;	/* PublicService.h:701 */

/* PublicService.h:266 */
#ifndef SOAP_TYPE_ns1__queryObjectInfoResponse
#define SOAP_TYPE_ns1__queryObjectInfoResponse (10)
/* complex XSD type 'ns1:queryObjectInfoResponse': */
struct SOAP_CMAC ns1__queryObjectInfoResponse {
      public:
        /** Required element 'queryObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_queryObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__queryObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__queryObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__queryObjectInfoResponse()
        {
          _queryObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__queryObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__queryObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__queryObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:266 */
#ifndef SOAP_TYPE_ns1__queryObjectInfo
#define SOAP_TYPE_ns1__queryObjectInfo (11)
/* complex XSD type 'ns1:queryObjectInfo': */
struct SOAP_CMAC ns1__queryObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__queryObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__queryObjectInfo; }
        /** Constructor with member initializations */
        ns1__queryObjectInfo()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__queryObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__queryObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__queryObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:339 */
#ifndef SOAP_TYPE_ns1__insertObjectInfoResponse
#define SOAP_TYPE_ns1__insertObjectInfoResponse (13)
/* complex XSD type 'ns1:insertObjectInfoResponse': */
struct SOAP_CMAC ns1__insertObjectInfoResponse {
      public:
        /** Required element 'insertObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_insertObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__insertObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__insertObjectInfoResponse()
        {
          _insertObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__insertObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__insertObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__insertObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:339 */
#ifndef SOAP_TYPE_ns1__insertObjectInfo
#define SOAP_TYPE_ns1__insertObjectInfo (14)
/* complex XSD type 'ns1:insertObjectInfo': */
struct SOAP_CMAC ns1__insertObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__insertObjectInfo; }
        /** Constructor with member initializations */
        ns1__insertObjectInfo()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__insertObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__insertObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__insertObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:412 */
#ifndef SOAP_TYPE_ns1__updateObjectInfoResponse
#define SOAP_TYPE_ns1__updateObjectInfoResponse (16)
/* complex XSD type 'ns1:updateObjectInfoResponse': */
struct SOAP_CMAC ns1__updateObjectInfoResponse {
      public:
        /** Required element 'updateObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_updateObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__updateObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__updateObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__updateObjectInfoResponse()
        {
          _updateObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__updateObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__updateObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__updateObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:412 */
#ifndef SOAP_TYPE_ns1__updateObjectInfo
#define SOAP_TYPE_ns1__updateObjectInfo (17)
/* complex XSD type 'ns1:updateObjectInfo': */
struct SOAP_CMAC ns1__updateObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__updateObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__updateObjectInfo; }
        /** Constructor with member initializations */
        ns1__updateObjectInfo()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__updateObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__updateObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__updateObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:485 */
#ifndef SOAP_TYPE_ns1__deleteObjectInfoResponse
#define SOAP_TYPE_ns1__deleteObjectInfoResponse (19)
/* complex XSD type 'ns1:deleteObjectInfoResponse': */
struct SOAP_CMAC ns1__deleteObjectInfoResponse {
      public:
        /** Required element 'deleteObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_deleteObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__deleteObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__deleteObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__deleteObjectInfoResponse()
        {
          _deleteObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__deleteObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__deleteObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__deleteObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:485 */
#ifndef SOAP_TYPE_ns1__deleteObjectInfo
#define SOAP_TYPE_ns1__deleteObjectInfo (20)
/* complex XSD type 'ns1:deleteObjectInfo': */
struct SOAP_CMAC ns1__deleteObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__deleteObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__deleteObjectInfo; }
        /** Constructor with member initializations */
        ns1__deleteObjectInfo()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__deleteObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__deleteObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__deleteObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:558 */
#ifndef SOAP_TYPE_ns1__callDataBaseProcessResponse
#define SOAP_TYPE_ns1__callDataBaseProcessResponse (22)
/* complex XSD type 'ns1:callDataBaseProcessResponse': */
struct SOAP_CMAC ns1__callDataBaseProcessResponse {
      public:
        /** Required element 'callDataBaseProcessReturn' of XSD type 'SOAP-ENC:string' */
        char *_callDataBaseProcessReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__callDataBaseProcessResponse */
        int soap_type() const { return SOAP_TYPE_ns1__callDataBaseProcessResponse; }
        /** Constructor with member initializations */
        ns1__callDataBaseProcessResponse()
        {
          _callDataBaseProcessReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__callDataBaseProcessResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__callDataBaseProcessResponse * SOAP_FMAC2 soap_instantiate_ns1__callDataBaseProcessResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:558 */
#ifndef SOAP_TYPE_ns1__callDataBaseProcess
#define SOAP_TYPE_ns1__callDataBaseProcess (23)
/* complex XSD type 'ns1:callDataBaseProcess': */
struct SOAP_CMAC ns1__callDataBaseProcess {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__callDataBaseProcess */
        int soap_type() const { return SOAP_TYPE_ns1__callDataBaseProcess; }
        /** Constructor with member initializations */
        ns1__callDataBaseProcess()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__callDataBaseProcess(struct soap*, int) */
        friend SOAP_FMAC1 ns1__callDataBaseProcess * SOAP_FMAC2 soap_instantiate_ns1__callDataBaseProcess(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:628 */
#ifndef SOAP_TYPE_ns1__batchObjectInfoResponse
#define SOAP_TYPE_ns1__batchObjectInfoResponse (25)
/* complex XSD type 'ns1:batchObjectInfoResponse': */
struct SOAP_CMAC ns1__batchObjectInfoResponse {
      public:
        /** Required element 'batchObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_batchObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__batchObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__batchObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__batchObjectInfoResponse()
        {
          _batchObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__batchObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__batchObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__batchObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:628 */
#ifndef SOAP_TYPE_ns1__batchObjectInfo
#define SOAP_TYPE_ns1__batchObjectInfo (26)
/* complex XSD type 'ns1:batchObjectInfo': */
struct SOAP_CMAC ns1__batchObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__batchObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__batchObjectInfo; }
        /** Constructor with member initializations */
        ns1__batchObjectInfo()
        {
          _senderID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__batchObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__batchObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__batchObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:701 */
#ifndef SOAP_TYPE_ns1__wsObjectInfoResponse
#define SOAP_TYPE_ns1__wsObjectInfoResponse (28)
/* complex XSD type 'ns1:wsObjectInfoResponse': */
struct SOAP_CMAC ns1__wsObjectInfoResponse {
      public:
        /** Required element 'wsObjectInfoReturn' of XSD type 'SOAP-ENC:string' */
        char *_wsObjectInfoReturn;
      public:
        /** Return unique type id SOAP_TYPE_ns1__wsObjectInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns1__wsObjectInfoResponse; }
        /** Constructor with member initializations */
        ns1__wsObjectInfoResponse()
        {
          _wsObjectInfoReturn = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__wsObjectInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns1__wsObjectInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__wsObjectInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:701 */
#ifndef SOAP_TYPE_ns1__wsObjectInfo
#define SOAP_TYPE_ns1__wsObjectInfo (29)
/* complex XSD type 'ns1:wsObjectInfo': */
struct SOAP_CMAC ns1__wsObjectInfo {
      public:
        /** Optional element 'senderID' of XSD type 'SOAP-ENC:string' */
        char *_senderID;
        /** Optional element 'serviceID' of XSD type 'SOAP-ENC:string' */
        char *_serviceID;
        /** Optional element 'xmlSet' of XSD type 'SOAP-ENC:string' */
        char *_xmlSet;
      public:
        /** Return unique type id SOAP_TYPE_ns1__wsObjectInfo */
        int soap_type() const { return SOAP_TYPE_ns1__wsObjectInfo; }
        /** Constructor with member initializations */
        ns1__wsObjectInfo()
        {
          _senderID = (char *)0;
          _serviceID = (char *)0;
          _xmlSet = (char *)0;
        }
        /** Friend allocator used by soap_new_ns1__wsObjectInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns1__wsObjectInfo * SOAP_FMAC2 soap_instantiate_ns1__wsObjectInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* PublicService.h:714 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (30)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* PublicService.h:714 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (31)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* PublicService.h:714 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (33)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* PublicService.h:714 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (36)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* PublicService.h:714 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (37)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* PublicService.h:116 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* PublicService.h:116 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* PublicService.h:116 */
#ifndef SOAP_TYPE_SOAP_ENC__string
#define SOAP_TYPE_SOAP_ENC__string (7)
typedef char *SOAP_ENC__string;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (37)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (36)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (33)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (31)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (30)
#endif

/* struct ns1__wsObjectInfo has binding name 'ns1__wsObjectInfo' for type 'ns1:wsObjectInfo' */
#ifndef SOAP_TYPE_ns1__wsObjectInfo
#define SOAP_TYPE_ns1__wsObjectInfo (29)
#endif

/* struct ns1__wsObjectInfoResponse has binding name 'ns1__wsObjectInfoResponse' for type 'ns1:wsObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__wsObjectInfoResponse
#define SOAP_TYPE_ns1__wsObjectInfoResponse (28)
#endif

/* struct ns1__batchObjectInfo has binding name 'ns1__batchObjectInfo' for type 'ns1:batchObjectInfo' */
#ifndef SOAP_TYPE_ns1__batchObjectInfo
#define SOAP_TYPE_ns1__batchObjectInfo (26)
#endif

/* struct ns1__batchObjectInfoResponse has binding name 'ns1__batchObjectInfoResponse' for type 'ns1:batchObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__batchObjectInfoResponse
#define SOAP_TYPE_ns1__batchObjectInfoResponse (25)
#endif

/* struct ns1__callDataBaseProcess has binding name 'ns1__callDataBaseProcess' for type 'ns1:callDataBaseProcess' */
#ifndef SOAP_TYPE_ns1__callDataBaseProcess
#define SOAP_TYPE_ns1__callDataBaseProcess (23)
#endif

/* struct ns1__callDataBaseProcessResponse has binding name 'ns1__callDataBaseProcessResponse' for type 'ns1:callDataBaseProcessResponse' */
#ifndef SOAP_TYPE_ns1__callDataBaseProcessResponse
#define SOAP_TYPE_ns1__callDataBaseProcessResponse (22)
#endif

/* struct ns1__deleteObjectInfo has binding name 'ns1__deleteObjectInfo' for type 'ns1:deleteObjectInfo' */
#ifndef SOAP_TYPE_ns1__deleteObjectInfo
#define SOAP_TYPE_ns1__deleteObjectInfo (20)
#endif

/* struct ns1__deleteObjectInfoResponse has binding name 'ns1__deleteObjectInfoResponse' for type 'ns1:deleteObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__deleteObjectInfoResponse
#define SOAP_TYPE_ns1__deleteObjectInfoResponse (19)
#endif

/* struct ns1__updateObjectInfo has binding name 'ns1__updateObjectInfo' for type 'ns1:updateObjectInfo' */
#ifndef SOAP_TYPE_ns1__updateObjectInfo
#define SOAP_TYPE_ns1__updateObjectInfo (17)
#endif

/* struct ns1__updateObjectInfoResponse has binding name 'ns1__updateObjectInfoResponse' for type 'ns1:updateObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__updateObjectInfoResponse
#define SOAP_TYPE_ns1__updateObjectInfoResponse (16)
#endif

/* struct ns1__insertObjectInfo has binding name 'ns1__insertObjectInfo' for type 'ns1:insertObjectInfo' */
#ifndef SOAP_TYPE_ns1__insertObjectInfo
#define SOAP_TYPE_ns1__insertObjectInfo (14)
#endif

/* struct ns1__insertObjectInfoResponse has binding name 'ns1__insertObjectInfoResponse' for type 'ns1:insertObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__insertObjectInfoResponse
#define SOAP_TYPE_ns1__insertObjectInfoResponse (13)
#endif

/* struct ns1__queryObjectInfo has binding name 'ns1__queryObjectInfo' for type 'ns1:queryObjectInfo' */
#ifndef SOAP_TYPE_ns1__queryObjectInfo
#define SOAP_TYPE_ns1__queryObjectInfo (11)
#endif

/* struct ns1__queryObjectInfoResponse has binding name 'ns1__queryObjectInfoResponse' for type 'ns1:queryObjectInfoResponse' */
#ifndef SOAP_TYPE_ns1__queryObjectInfoResponse
#define SOAP_TYPE_ns1__queryObjectInfoResponse (10)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (39)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (38)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (32)
#endif

/* SOAP_ENC__string has binding name 'SOAP_ENC__string' for type 'SOAP-ENC:string' */
#ifndef SOAP_TYPE_SOAP_ENC__string
#define SOAP_TYPE_SOAP_ENC__string (7)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
