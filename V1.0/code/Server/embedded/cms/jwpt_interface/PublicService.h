// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* PublicService.h
   Generated by wsdl2h 2.8.45 from PublicService.wsdl and typemap.dat
   2017-05-02 14:39:55 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on PublicService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stl.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://webservice.qqfw.btdx.com                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "SOAP-ENC:string".
typedef char* SOAP_ENC__string;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	PublicServiceSoapBinding 
//gsoap ns1  service type:	WebServiceImp 
//gsoap ns1  service port:	http://10.33.250.125:9080/QQFWPT/services/PublicService 
//gsoap ns1  service namespace:	http://webservice.qqfw.btdx.com 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref PublicServiceSoapBinding

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page PublicServiceSoapBinding Binding "PublicServiceSoapBinding"

@section PublicServiceSoapBinding_operations Operations of Binding "PublicServiceSoapBinding"

  - @ref ns1__queryObjectInfo

  - @ref ns1__insertObjectInfo

  - @ref ns1__updateObjectInfo

  - @ref ns1__deleteObjectInfo

  - @ref ns1__callDataBaseProcess

  - @ref ns1__batchObjectInfo

  - @ref ns1__wsObjectInfo

@section PublicServiceSoapBinding_ports Default endpoints of Binding "PublicServiceSoapBinding"

  - http://10.33.250.125:9080/QQFWPT/services/PublicService

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PublicServiceSoapBinding                                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__queryObjectInfo                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__queryObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__queryObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_queryObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__queryObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_queryObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	queryObjectInfo SOAP
//gsoap ns1  service method-style:	queryObjectInfo rpc
//gsoap ns1  service method-encoding:	queryObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	queryObjectInfo ""
//gsoap ns1  service method-output-action:	queryObjectInfo Response
int ns1__queryObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_queryObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__insertObjectInfo                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__insertObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__insertObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_insertObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__insertObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_insertObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	insertObjectInfo SOAP
//gsoap ns1  service method-style:	insertObjectInfo rpc
//gsoap ns1  service method-encoding:	insertObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	insertObjectInfo ""
//gsoap ns1  service method-output-action:	insertObjectInfo Response
int ns1__insertObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_insertObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__updateObjectInfo                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__updateObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__updateObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_updateObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__updateObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_updateObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	updateObjectInfo SOAP
//gsoap ns1  service method-style:	updateObjectInfo rpc
//gsoap ns1  service method-encoding:	updateObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	updateObjectInfo ""
//gsoap ns1  service method-output-action:	updateObjectInfo Response
int ns1__updateObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_updateObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__deleteObjectInfo                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__deleteObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__deleteObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_deleteObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__deleteObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_deleteObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	deleteObjectInfo SOAP
//gsoap ns1  service method-style:	deleteObjectInfo rpc
//gsoap ns1  service method-encoding:	deleteObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	deleteObjectInfo ""
//gsoap ns1  service method-output-action:	deleteObjectInfo Response
int ns1__deleteObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_deleteObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__callDataBaseProcess                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__callDataBaseProcess" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__callDataBaseProcess(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_callDataBaseProcessReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__callDataBaseProcess(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_callDataBaseProcessReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	callDataBaseProcess SOAP
//gsoap ns1  service method-style:	callDataBaseProcess rpc
//gsoap ns1  service method-encoding:	callDataBaseProcess http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	callDataBaseProcess ""
//gsoap ns1  service method-output-action:	callDataBaseProcess Response
int ns1__callDataBaseProcess(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_callDataBaseProcessReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__batchObjectInfo                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__batchObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__batchObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_batchObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__batchObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_batchObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	batchObjectInfo SOAP
//gsoap ns1  service method-style:	batchObjectInfo rpc
//gsoap ns1  service method-encoding:	batchObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	batchObjectInfo ""
//gsoap ns1  service method-output-action:	batchObjectInfo Response
int ns1__batchObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_batchObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__wsObjectInfo                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "ns1__wsObjectInfo" of service binding "PublicServiceSoapBinding".

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Default endpoints:
    - http://10.33.250.125:9080/QQFWPT/services/PublicService

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__wsObjectInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_wsObjectInfoReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__wsObjectInfo(
    struct soap *soap,
    // input parameters:
    SOAP_ENC__string                    senderID,
    SOAP_ENC__string                    serviceID,
    SOAP_ENC__string                    xmlSet,
    // output parameters:
    SOAP_ENC__string                   &_wsObjectInfoReturn
  );
@endcode

C++ proxy class (defined in soapPublicServiceSoapBindingProxy.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPublicServiceSoapBindingService.h generated with soapcpp2):
@code
  class PublicServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wsObjectInfo SOAP
//gsoap ns1  service method-style:	wsObjectInfo rpc
//gsoap ns1  service method-encoding:	wsObjectInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	wsObjectInfo ""
//gsoap ns1  service method-output-action:	wsObjectInfo Response
int ns1__wsObjectInfo(
    SOAP_ENC__string                    :_senderID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_serviceID,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                    :_xmlSet,	///< Input parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
    SOAP_ENC__string                   &:_wsObjectInfoReturn	///< Output parameter, : unqualified name as per RPC encoding, _ wildcard name as per RPC parameterOrder
);

/**

@page PublicServiceSoapBinding Binding "PublicServiceSoapBinding"

@section PublicServiceSoapBinding_policy_enablers Policy Enablers of Binding "PublicServiceSoapBinding"

None specified.

*/

/* End of PublicService.h */
